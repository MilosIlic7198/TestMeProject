CREATE TABLE account (
account_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
username_email VARCHAR(50) NOT NULL UNIQUE,
password VARCHAR(30) NOT NULL,
account_type ENUM('A','I','S') NOT NULL,
CHECK (account_type IN ('A','I','S')),
UNIQUE (account_type, account_id, username_email)
);

CREATE TABLE admin (
admin_id INT PRIMARY KEY NOT NULL,
first_name VARCHAR(20) NOT NULL,
last_name VARCHAR(20) NOT NULL,
email VARCHAR(50) NOT NULL,
phone_number VARCHAR(11) NOT NULL,
god_id INT NULL,
FOREIGN KEY(admin_id) REFERENCES account(account_id) ON DELETE CASCADE,
FOREIGN KEY(god_id) REFERENCES admin(admin_id) ON DELETE SET NULL
);


CREATE TABLE instructor (
instructor_id INT PRIMARY KEY NOT NULL,
first_name VARCHAR(20) NOT NULL,
last_name VARCHAR(20) NOT NULL,
initials VARCHAR(3) NOT NULL,
birthdate DATE NOT NULL,
gender ENUM('m','f') NOT NULL,
phone_number VARCHAR(11) NOT NULL,
admin_id INT NOT NULL,
FOREIGN KEY(instructor_id) REFERENCES account(account_id) ON DELETE CASCADE,
FOREIGN KEY(admin_id) REFERENCES admin(admin_id)
);


CREATE TABLE student (
student_id INT PRIMARY KEY NOT NULL,
first_name VARCHAR(20) NOT NULL,
last_name VARCHAR(20) NOT NULL,
city VARCHAR(15) NOT NULL,
street VARCHAR(30) NOT NULL,
postal_code INT NOT NULL,
birthdate DATE NOT NULL,
gender ENUM('m','f') NOT NULL,
instructor_id INT NOT NULL,
admin_id INT NOT NULL,
FOREIGN KEY(student_id) REFERENCES account(account_id) ON DELETE CASCADE,
FOREIGN KEY(instructor_id) REFERENCES instructor(instructor_id),
FOREIGN KEY(admin_id) REFERENCES admin(admin_id)
);


CREATE TABLE test (
test_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
instructor_id INT NOT NULL,
FOREIGN KEY(instructor_id) REFERENCES instructor(instructor_id) ON DELETE CASCADE,
name VARCHAR(50) NOT NULL,
description VARCHAR(200) NOT NULL
);


CREATE TABLE test_questions (
test_id INT NOT NULL,
question VARCHAR(400) NOT NULL,
option_1 VARCHAR(100) NOT NULL,
option_2 VARCHAR(100) NOT NULL,
option_3 VARCHAR(100) NOT NULL,
option_4 VARCHAR(100) NOT NULL,
correct_answer VARCHAR(100) NOT NULL,
FOREIGN KEY(test_id) REFERENCES test(test_id) ON DELETE CASCADE
);


CREATE TABLE test_tasks (
test_id INT NOT NULL,
task_description VARCHAR(400) NOT NULL,
code VARCHAR(3000) NOT NULL,
FOREIGN KEY(test_id) REFERENCES test(test_id) ON DELETE CASCADE
);


CREATE TABLE taken_by (
test_id INT NOT NULL,
student_id INT NOT NULL,
FOREIGN KEY(test_id) REFERENCES test(test_id) ON DELETE CASCADE,
FOREIGN KEY(student_id) REFERENCES student(student_id) ON DELETE CASCADE,
date_taken DATE NOT NULL
);


CREATE TABLE submitted_test (
test_id INT NOT NULL,
instructor_id INT NOT NULL,
student_id INT NOT NULL,
score INT NULL,
FOREIGN KEY(test_id) REFERENCES test(test_id) ON DELETE CASCADE,
FOREIGN KEY(instructor_id) REFERENCES instructor(instructor_id) ON DELETE CASCADE,
FOREIGN KEY(student_id) REFERENCES student(student_id) ON DELETE CASCADE
);


CREATE TABLE submitted_questions (
test_id INT NOT NULL,
question VARCHAR(400) NOT NULL,
answer VARCHAR(100) NOT NULL,
correct_answer VARCHAR(100) NOT NULL,
FOREIGN KEY(test_id) REFERENCES submitted_test(test_id) ON DELETE CASCADE
);


CREATE TABLE submitted_tasks (
test_id INT NOT NULL,
task_description VARCHAR(400) NOT NULL,
code VARCHAR(3000) NOT NULL,
FOREIGN KEY(test_id) REFERENCES submitted_test(test_id) ON DELETE CASCADE
);


